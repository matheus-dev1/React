[{"C:\\Matheus\\Study\\IT\\Recode\\React.js\\state-effect\\src\\index.js":"1","C:\\Matheus\\Study\\IT\\Recode\\React.js\\state-effect\\src\\App.js":"2","C:\\Matheus\\Study\\IT\\Recode\\React.js\\state-effect\\src\\reportWebVitals.js":"3"},{"size":1079,"mtime":1610931917101,"results":"4","hashOfConfig":"5"},{"size":5523,"mtime":1610993101870,"results":"6","hashOfConfig":"5"},{"size":362,"mtime":499162500000,"results":"7","hashOfConfig":"5"},{"filePath":"8","messages":"9","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"tbwhvs",{"filePath":"11","messages":"12","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"10"},"C:\\Matheus\\Study\\IT\\Recode\\React.js\\state-effect\\src\\index.js",[],["15","16"],"C:\\Matheus\\Study\\IT\\Recode\\React.js\\state-effect\\src\\App.js",["17","18","19","20"],"C:\\Matheus\\Study\\IT\\Recode\\React.js\\state-effect\\src\\reportWebVitals.js",[],{"ruleId":"21","replacedBy":"22"},{"ruleId":"23","replacedBy":"24"},{"ruleId":"25","severity":1,"message":"26","line":49,"column":12,"nodeType":"27","messageId":"28","endLine":49,"endColumn":21},{"ruleId":"29","severity":1,"message":"30","line":59,"column":19,"nodeType":"31","endLine":65,"endColumn":4},{"ruleId":"29","severity":1,"message":"32","line":65,"column":6,"nodeType":"33","endLine":65,"endColumn":8,"suggestions":"34"},{"ruleId":"35","severity":1,"message":"36","line":98,"column":15,"nodeType":"37","endLine":98,"endColumn":57},"no-native-reassign",["38"],"no-negated-in-lhs",["39"],"no-unused-vars","'SomaClick' is defined but never used.","Identifier","unusedVar","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook React.useEffect has a missing dependency: 'gitHubNameValue'. Either include it or remove the dependency array.","ArrayExpression",["40"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","no-global-assign","no-unsafe-negation",{"desc":"41","fix":"42"},"Update the dependencies array to be: [gitHubNameValue]",{"range":"43","text":"44"},[2866,2868],"[gitHubNameValue]"]